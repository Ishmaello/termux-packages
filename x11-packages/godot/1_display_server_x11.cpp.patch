--- src/platform/linuxbsd/x11/display_server_x11.cpp	2023-03-05 19:01:42.709053812 +0300
+++ src/platform/linuxbsd/x11/display_server_x11.cpp.patch	2023-03-05 22:34:16.979048946 +0300
@@ -5042,67 +5042,62 @@
 			XChangeProperty(x11_display, wd.x11_window, xdnd_aware, XA_ATOM, 32, PropModeReplace, (unsigned char *)&xdnd_version, 1);
 		}
 
-		if (xim && xim_style) {
-			// Block events polling while changing input focus
-			// because it triggers some event polling internally.
-			MutexLock mutex_lock(events_mutex);
-
-			// Force on-the-spot for the over-the-spot style.
-			if ((xim_style & XIMPreeditPosition) != 0) {
-				xim_style &= ~XIMPreeditPosition;
-				xim_style |= XIMPreeditCallbacks;
-			}
-			if ((xim_style & XIMPreeditCallbacks) != 0) {
-				::XIMCallback preedit_start_callback;
-				preedit_start_callback.client_data = (::XPointer)(this);
-				preedit_start_callback.callback = (::XIMProc)(void *)(_xim_preedit_start_callback);
-
-				::XIMCallback preedit_done_callback;
-				preedit_done_callback.client_data = (::XPointer)(this);
-				preedit_done_callback.callback = (::XIMProc)(_xim_preedit_done_callback);
-
-				::XIMCallback preedit_draw_callback;
-				preedit_draw_callback.client_data = (::XPointer)(this);
-				preedit_draw_callback.callback = (::XIMProc)(_xim_preedit_draw_callback);
-
-				::XIMCallback preedit_caret_callback;
-				preedit_caret_callback.client_data = (::XPointer)(this);
-				preedit_caret_callback.callback = (::XIMProc)(_xim_preedit_caret_callback);
-
-				::XVaNestedList preedit_attributes = XVaCreateNestedList(0,
-						XNPreeditStartCallback, &preedit_start_callback,
-						XNPreeditDoneCallback, &preedit_done_callback,
-						XNPreeditDrawCallback, &preedit_draw_callback,
-						XNPreeditCaretCallback, &preedit_caret_callback,
-						(char *)nullptr);
-
-				wd.xic = XCreateIC(xim,
-						XNInputStyle, xim_style,
-						XNClientWindow, wd.x11_xim_window,
-						XNFocusWindow, wd.x11_xim_window,
-						XNPreeditAttributes, preedit_attributes,
-						(char *)nullptr);
-				XFree(preedit_attributes);
-			} else {
-				wd.xic = XCreateIC(xim,
-						XNInputStyle, xim_style,
-						XNClientWindow, wd.x11_xim_window,
-						XNFocusWindow, wd.x11_xim_window,
-						(char *)nullptr);
-			}
-
-			if (XGetICValues(wd.xic, XNFilterEvents, &im_event_mask, nullptr) != nullptr) {
-				WARN_PRINT("XGetICValues couldn't obtain XNFilterEvents value");
-				XDestroyIC(wd.xic);
-				wd.xic = nullptr;
-			}
-			if (wd.xic) {
-				XUnsetICFocus(wd.xic);
-			} else {
-				WARN_PRINT("XCreateIC couldn't create wd.xic");
-			}
+		// Block events polling while changing input focus
+		// because it triggers some event polling internally.
+		MutexLock mutex_lock(events_mutex);
+
+		// Force on-the-spot for the over-the-spot style.
+		if ((xim_style & XIMPreeditPosition) != 0) {
+			xim_style &= ~XIMPreeditPosition;
+			xim_style |= XIMPreeditCallbacks;
+		}
+		if ((xim_style & XIMPreeditCallbacks) != 0) {
+			::XIMCallback preedit_start_callback;
+			preedit_start_callback.client_data = (::XPointer)(this);
+			preedit_start_callback.callback = (::XIMProc)(void *)(_xim_preedit_start_callback);
+
+			::XIMCallback preedit_done_callback;
+			preedit_done_callback.client_data = (::XPointer)(this);
+			preedit_done_callback.callback = (::XIMProc)(_xim_preedit_done_callback);
+
+			::XIMCallback preedit_draw_callback;
+			preedit_draw_callback.client_data = (::XPointer)(this);
+			preedit_draw_callback.callback = (::XIMProc)(_xim_preedit_draw_callback);
+
+			::XIMCallback preedit_caret_callback;
+			preedit_caret_callback.client_data = (::XPointer)(this);
+			preedit_caret_callback.callback = (::XIMProc)(_xim_preedit_caret_callback);
+
+			::XVaNestedList preedit_attributes = XVaCreateNestedList(0,
+					XNPreeditStartCallback, &preedit_start_callback,
+					XNPreeditDoneCallback, &preedit_done_callback,
+					XNPreeditDrawCallback, &preedit_draw_callback,
+					XNPreeditCaretCallback, &preedit_caret_callback,
+					(char *)nullptr);
+
+			wd.xic = XCreateIC(xim,
+					XNInputStyle, xim_style,
+					XNClientWindow, wd.x11_xim_window,
+					XNFocusWindow, wd.x11_xim_window,
+					XNPreeditAttributes, preedit_attributes,
+					(char *)nullptr);
+			XFree(preedit_attributes);
 		} else {
+			wd.xic = XCreateIC(xim,
+					XNInputStyle, xim_style,
+					XNClientWindow, wd.x11_xim_window,
+					XNFocusWindow, wd.x11_xim_window,
+					(char *)nullptr);
+		}
+
+		if (XGetICValues(wd.xic, XNFilterEvents, &im_event_mask, nullptr) != nullptr) {
+			WARN_PRINT("XGetICValues couldn't obtain XNFilterEvents value");
+			XDestroyIC(wd.xic);
 			wd.xic = nullptr;
+		}
+		if (wd.xic) {
+			XUnsetICFocus(wd.xic);
+		} else {
 			WARN_PRINT("XCreateIC couldn't create wd.xic");
 		}
 
